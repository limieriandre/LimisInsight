@model IEnumerable<LimisInsight.Models.TimeEntries>

@{
    ViewData["Title"] = "TimeEntries Management";
}

<div class="container mt-5">
    <div class="row">
        <div class="col-md-12 text-center">
            <h1 class="display-4 mb-2">Time Entries</h1>
        </div>
    </div>
    <div class="row justify-content-center">
        <div class="col-md-2 mb-3">
            <button id="loadTimeEntriesBtn" class="btn btn-primary btn-lg w-100">Listar Dados Artia</button>
        </div>
        <div class="col-md-2 mb-3">
            <button id="cloneDataBtn" class="btn btn-primary btn-lg w-100">Clonar Dados</button>
        </div>
        <div class="col-md-2 mb-3">
            <button id="loadLocalDataBtn" class="btn btn-primary btn-lg w-100">Dados Locais</button>
        </div>
    </div>

    <div id="loadingDiv" class="text-center mt-4" style="display:none;">
        <i class="fas fa-cog fa-spin"></i> Carregando...
    </div>

    <div id="timeEntriesTableDiv" class="mt-4" style="display: none;">
        <table id="timeEntriesDataTable" class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>DateAt</th>
                    <th>Duration</th>
                    <th>DurationHour</th>
                    <th>UserId</th>
                    <th>UserName</th>
                </tr>
            </thead>
            <tbody>
                <!-- Os dados de TimeEntries serão inseridos aqui pela chamada AJAX -->
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        function initializeDataTable() {
            if (!$.fn.DataTable.isDataTable('#timeEntriesDataTable')) {
                $('#timeEntriesDataTable').DataTable({
                    columns: [
                        { data: 'Id' },
                        { data: 'DateAt' },
                        { data: 'Duration' },
                        { data: 'DurationHour' },
                        { data: 'UserId' },
                        { data: 'UserName' }
                    ]
                });
            }
        }

        $("#loadTimeEntriesBtn").click(function () {
            // Limpeza inicial
            if ($.fn.dataTable.isDataTable('#timeEntriesDataTable')) {
                $('#timeEntriesDataTable').DataTable().destroy();
                $('#timeEntriesDataTable tbody').empty();
            }

            $("#timeEntriesDataTable").DataTable({
                serverSide: true,
                processing: true,
                ajax: {
                    url: "@Url.Action("GetTimeEntries", "TimeEntries")",
                    type: 'POST',
                    data: function (d) {
                        d.year = 2023;  // Envie o ano como um parâmetro adicional para filtrar os registros
                    }
                },
                columns: [
                    { data: 'Id' },
                    { data: 'DateAt' },
                    { data: 'Duration' },
                    { data: 'DurationHour' },
                    { data: 'UserId' },
                    { data: 'UserName' }
                ]
            });
        });

        $("#cloneDataBtn").click(function (event) {
            event.preventDefault();

            $("#loadingDiv").show();
            $("#cloneDataBtn").prop("disabled", true);

            $.ajax({
                url: "@Url.Action("CloneData", "TimeEntries")",
                type: 'POST',
                data: {
                    year: 2023  // Envie o ano como um parâmetro adicional para filtrar os registros
                },
                dataType: 'json',
                success: function (response) {
                    $("#loadingDiv").hide();
                    $("#cloneDataBtn").prop("disabled", false);
                    if (response.success) {
                        alert("Dados clonados com sucesso! " + response.clonedCount + " registros transferidos.");
                    } else {
                        alert("Ocorreu um erro ao clonar os dados.");
                    }
                },
                error: function () {
                    $("#loadingDiv").hide();
                    $("#cloneDataBtn").prop("disabled", false);
                    alert("Erro ao clonar os dados.");
                }
            });
        });

        $("#loadLocalDataBtn").click(function () {
            if ($.fn.dataTable.isDataTable('#timeEntriesDataTable')) {
                $('#timeEntriesDataTable').DataTable().destroy();
                $('#timeEntriesDataTable tbody').empty();
            }

            $.ajax({
                url: "@Url.Action("DisplayLocalData", "TimeEntries")",
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    $.each(data, function (i, entry) {
                        var row = '<tr>'
                            + '<td>' + entry.Id + '</td>'
                            + '<td>' + entry.DateAt + '</td>'
                            + '<td>' + entry.Duration + '</td>'
                            + '<td>' + entry.DurationHour + '</td>'
                            + '<td>' + entry.UserId + '</td>'
                            + '<td>' + entry.UserName + '</td>'
                            + '</tr>';
                        $('#timeEntriesDataTable tbody').append(row);
                    });

                    initializeDataTable();
                },
                error: function (error) {
                    console.error("Erro ao buscar dados locais:", error);
                }
            });
        });
    </script>
}
